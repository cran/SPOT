Initial version: 0.1.888

	Changes from version 0.1.888 to version 0.1.1016:
	1. New function: spotGui()
		Starts a java gui to work with SPOT
	2. New parameters for the \"meta\" task:
		- spotConfig$report.meta.func
		- spotConfig$report.meta.path
		Define name and path of a report that summarizes a meta experiment
	3. Fixed Documentation

Changes from version 0.1.1016 to version 0.1.1065

	1. New parameters in spotConfig:
		a.	spot.fileMode: Boolean, defines if 
			created data is logged in res/des/bst/aroi files
			If TRUE (default) files will be written, else
			the results will be written to spotConfig (see
			the followind parameters)
		b.	alg.currentResult: Holds the results of the
			target algorithm or function that is optimized 
			by spot, as a data frame. (earlier only in .res file)
		c.	alg.aroi: this holds the aroi (earlier only in .aroi 
			file)
		d.	alg.currentBest: This holds a data frame with the best
			results (earlier only in .bst files)
		e.	alg.currentDesign: This holds a data frame with the 
			design to be evaluated by the next \"run\" task.(earlier
			only in .des files)

	2. Changes to userdefined functions:

		spotConfig$alg.func:
		This function now recieves and returns only spotConfig.
		This means resFileName, apdFileName, and desFileName are no
		input arguments anymore, they need to be read from 	spotConfig.
		The function needs to be changed to write the \"result\" data
		frame to the spotConfig$alg.currentResult.
		It can also be written to .res file, if wanted by the user.
		(check for spotConfig$spot.fileMode if needed)

		spotConfig$report.func
		The function now also returns spotConfig.
		To get the best value the following lines are be used now in the default report: 
		#################################	
		spotConfig=spotWriteBest(mergedData, spotConfig);
		C1=spotConfig$alg.currentBest[nrow(spotConfig$alg.currentBest),]
		#################################

		In general some spot functions you might use in your
		userdefined functions will now return spotConfig.

	3. spot() can now be called with a list of settings, e.g. spotConfig.
		example: spot(\"example.conf\",\"auto\",spotConfig=list(auto.loop.nevals=150)).
		spot() will also return the spotConfig. This can then be feed into the next spot() run.

	4. Changes to the spotGui:
		a.	The spotGui layout was changed, a menu bar added.
		b.	New feature: Create your own test functions with
		the function generator

Changes from version 0.1.1065 to 0.1.1375

	1. Important new function: 
		spotOptim: an optim like spot interface
		spotOcba: used with spotCreateSequentialDesignOcba. It is the new default, but works only with noisy functions. See documentation. 
	2. Prediction functions should now return spotConfig. Both the model fit (if available, used for the predict interface) and the y values 
		for the large design are returned inside spotConfig.
	3. Any model fit that works with the predict interface can now be optimized in a additional function call in the sequential design step.
		Therefore a new parameter is introduced: spotConfig$seq.predictionOpt.func
		See also: spotPredictOptMulti
	4. Usabillity changes to the spotGui
	5. Updated documentation 
	6. Setting spot.seed or alg.seed to NULL will result into randomly chosen seeds.
	7. spot() and spotOptim() can be started without file input or output.
	8. New test functions
		spotFuncStartMexicanHat
		spotFuncStartRastrigin
		spotFuncStartRosenbrock
	9. Function handles can be passed to spot or spotOptim, instead of strings, for the used objective function.
	10. readded to the package spotPredictKrig
	11. several bugfixes to predictors and other functions
	12. Where possible, verbosity of other packages used by spot is now in line with spot's verbosity
	
	Known major problems:
	spotpredictLmOptim does not work with interface changes
	
Changes from version 0.1.1375 to current version

	1. Fixed bugs with regard to problems with handling random number generator seed
	2. Changes to spotTask "meta" (spotStepMetaOpt): New structure, not fully documented yet.
	3. Sensitivity report will not use the same graphic window as the online plot anymore
	4. Changed/added suitable error messages
	3. some other smaller bug fixes